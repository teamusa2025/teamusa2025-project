// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // for local development
  url      = env("DATABASE_URL")
  // for Vercel
  // url       = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String @unique
  password String
  role     Role   @default(USER)
  subrole  Subrole @default(EXECUTIVE)
}

enum Role {
  USER
  ADMIN
}

enum Subrole {
  EXECUTIVE
  ANALYST
  AUDITOR
  ADMIN
}

model AuditedFinances {
  id                                    Int     @id @default(autoincrement())
  year                                  Int     @unique

  revenue                               Float
  netSales                              Float

  // Cost of goods sold:
  costOfContracting                     Float
  overhead                              Float
  costOfGoodsSold                       Float
  grossProfit                           Float
  grossMarginPercent                    Float

  // Operating Expenses:
  salariesAndBenefits                   Float
  rentAndOverhead                       Float
  depreciationAndAmortization           Float
  interest                              Float
  totalOperatingExpenses                Float
  operatingExpensesPercent              Float

  profitLossFromOperations              Float
  profitLossFromOperationsPercent       Float

  // Other income (expenses):
  interestIncome                        Float
  interestExpense                       Float
  gainLossOnDisposalOfAssets            Float
  otherIncomeExpense                    Float
  totalOtherIncomeExpense               Float
  totalOtherIncomeExpensePercent        Float
  incomeLossBeforeIncomeTaxes           Float
  preTaxIncomePercent                   Float
  incomeTaxes                           Float
  netIncomeLoss                         Float
  netIncomeLossPercent                  Float

  // Balance Sheet (Assets)
  // Current Assets
  cashEquivalents                       Float
  accountsReceivable                    Float
  inventory                             Float
  totalCurrentAssets                    Float

  // Long-term Asset
  propertyPlantAndEquipment             Float
  investment                            Float
  totalLongTermAssets                   Float

  totalAssets                           Float

  // Liabilities and Equity
  // Current Liabilities (due within 1 year)
  accountsPayable                       Float
  debtService                           Float
  taxesPayable                          Float
  totalCurrentLiabilities               Float

  // Long-term Liabilities (due after one year)
  debtServiceLongTerm                   Float
  loansPayable                          Float
  totalLongTermLiabilities              Float

  totalLiabilities                      Float

  // Stockholder's Equity
  equityCapital                         Float
  retainedEarnings                      Float
  totalStockholdersEquity               Float

  totalLiabilitiesAndEquity             Float
}


enum Condition {
  excellent
  good
  fair
  poor
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition
  owner     String
}
